@page "/"
@page "/Pacs"
@page "/Pac"

@inject AppData AppData
@using Microsoft.AspNetCore.WebUtilities
@using WhereTheyStand.Lib
@inject AppData AppData
@inject NavigationManager NavManager

<PageTitle>Where do they stand?</PageTitle>
<Statement></Statement>
@AppData.stopwatch.Elapsed.TotalMilliseconds;


@if (PacId is null)
{
    <p>Total included in the data set: $@String.Format("{0:n0}",AppData.CurrentDataSet.DonationIdToDonation.Values.Sum(x => x.Pacs)) from $@String.Format("{0:n0}",AppData.CurrentDataSet.OrganizationIdToOrganization.Keys.Count(x => AppData.CurrentDataSet.OrganizationIdToDonations(x).Any(y => y.Pacs > 0))) PACs.</p>

    @foreach(var pac in AppData.CurrentDataSet.OrganizationIdToOrganization.Keys.Where(x => AppData.CurrentDataSet.OrganizationIdToDonations(x).Any(x => x.Pacs > 0)).OrderByDescending(x => AppData.CurrentDataSet.OrganizationIdToDonations(x).Sum(y => y.Pacs)))
    {
        <h1><a @onclick="() => { Set(pac); }" style="color:blue">@AppData.CurrentDataSet.OrganizationIdToOrganization[@pac].Ultord</a></h1>
        <p>$@String.Format("{0:n0}",AppData.CurrentDataSet.OrganizationIdToDonations(pac).Sum(y => y.Pacs)) donated to @String.Format("{0:n0}",AppData.CurrentDataSet.OrganizationIdToDonations(pac).Where(x => x.Pacs > 0).DistinctBy(x => x.Candidate).Count()) candidates.</p>
    }
}
else
{
    <a @onclick="() => {Set(null);}">Reset</a>
    <div>
        <h1>@AppData.CurrentDataSet.OrganizationIdToOrganization[PacId].Ultord</h1>
        <p>This PAC has donated @String.Format("{0:n0}",AppData.CurrentDataSet.OrganizationIdToDonations(PacId).Sum(x => x.Pacs)) to @String.Format("{0:n0}",AppData.CurrentDataSet.OrganizationIdToDonations(PacId).Where(x => x.Pacs > 0).Count()) candidates who co-sponsored HR 1011. <a href=@PacUrl target="_blank">Source</a></p>
        
        @foreach(var donation in AppData.CurrentDataSet.OrganizationIdToDonations(PacId).Where(x => x.Pacs > 0).OrderByDescending(x => x.Pacs))
        {
            <p>$@String.Format("{0:n0}",donation.Pacs) donated to <a href="Candidate?CandidateId=@donation.Candidate.id">@donation.Candidate.name</a></p>
        }
    </div>
}


@code
{
    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("PacId", out var pacId))
        {
            PacId = new OrganizationId(pacId);
        }
    }

    void Set(OrganizationId? pacId)
    {
        var existingUri = NavManager.Uri;
        var newUri = existingUri.Split('?')[0];
        if (pacId is not null)
        {
            newUri += $"?PacId={pacId}";
        }
        PacId = pacId;
        NavManager.NavigateTo(newUri);
        MakePacUrl();
    }


    void MakePacUrl()
    {
        if (PacId is null)
        {
            PacUrl = string.Empty;
        }
        else
        {
            PacUrl = $"https://www.opensecrets.org/political-action-committees-pacs/{PacId}/candidate-recipients/2022";
        }
    }

    OrganizationId? PacId = null;

    string PacUrl = string.Empty;
}